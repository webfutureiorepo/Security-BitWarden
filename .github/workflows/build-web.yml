---
name: Build Web

on:
  pull_request:
    branches-ignore:
      - 'l10n_master'
      - 'cf-pages'
    paths:
      - 'apps/web/**'
      - 'libs/**'
      - '*'
      - '!*.md'
      - '!*.txt'
      - '.github/workflows/build-web.yml'
  push:
    branches:
      - 'master'
      - 'rc'
      - 'hotfix-rc-web'
    paths:
      - 'apps/web/**'
      - 'libs/**'
      - '*'
      - '!*.md'
      - '!*.txt'
      - '.github/workflows/build-web.yml'
  workflow_dispatch:
    inputs:
      custom_tag_extension:
        description: "Custom image tag extension"
        required: false

jobs:
  cloc:
    name: CLOC
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b  # v3.0.2

      - name: Set up cloc
        run: |
          sudo apt update
          sudo apt -y install cloc

      - name: Print lines of code
        working-directory: apps/web
        run: cloc --include-lang TypeScript,JavaScript,HTML,Sass,CSS --vcs git


  setup:
    name: Setup
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.version.outputs.value }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b  # v3.0.2

      - name: Get GitHub sha as version
        id: version
        run: echo "::set-output name=value::${GITHUB_SHA:0:7}"

  build-artifacts:
    name: Build artifacts
    runs-on: ubuntu-22.04
    needs:
      - setup
    env:
      _VERSION: ${{ needs.setup.outputs.version }}
    strategy:
      matrix:
        include:
          - name: "selfhosted-open-source"
            npm_command: "dist:oss:selfhost"
          - name: "cloud-COMMERCIAL"
            npm_command: "dist:bit:cloud"
          - name: "selfhosted-COMMERCIAL"
            npm_command: "dist:bit:selfhost"
          - name: "cloud-QA"
            npm_command: "build:bit:qa"
          - name: "ee"
            npm_command: "build:bit:ee"

    steps:
      - name: Checkout repo
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b  # v3.0.2

      - name: Set up Node
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93  # v3.4.1
        with:
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
          node-version: "16"

      - name: Print environment
        run: |
          whoami
          node --version
          npm --version
          gulp --version
          docker --version
          echo "GitHub ref: $GITHUB_REF"
          echo "GitHub event: $GITHUB_EVENT"

      - name: Install dependencies
        run: npm ci

      - name: Setup QA metadata
        working-directory: apps/web
        if: matrix.name == 'cloud-QA'
        run: |
          VERSION=$( jq -r ".version" package.json)
          jq --arg version "$VERSION - ${GITHUB_SHA:0:7}" '.version = $version' package.json > package.json.tmp
          mv package.json.tmp package.json

      - name: Build ${{ matrix.name }}
        working-directory: apps/web
        run: npm run ${{ matrix.npm_command }}

      - name: Package artifact
        working-directory: apps/web
        run: zip -r web-${{ env._VERSION }}-${{ matrix.name }}.zip build

      - name: Upload ${{ matrix.name }} artifact
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535  # v3.0.0
        with:
          name: web-${{ env._VERSION }}-${{ matrix.name }}.zip
          path: apps/web/web-${{ env._VERSION }}-${{ matrix.name }}.zip
          if-no-files-found: error

  build-commercial-selfhost-image:
    name: Build self-host docker image
    runs-on: ubuntu-22.04
    needs:
      - setup
      - build-artifacts
    env:
      _VERSION: ${{ needs.setup.outputs.version }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b  # v3.0.2

      - name: Setup DCT
        if: github.ref == 'refs/heads/master' ||
          github.ref == 'refs/heads/rc' ||
          github.ref == 'refs/heads/hotfix-rc-web'
        id: setup-dct
        uses: bitwarden/gh-actions/setup-docker-trust@a8c384a05a974c05c48374c818b004be221d43ff
        with:
          azure-creds: ${{ secrets.AZURE_PROD_KV_CREDENTIALS }}
          azure-keyvault-name: "bitwarden-prod-kv"

      - name: Download selfhosted-COMMERCIAL artifact
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: web-${{ env._VERSION }}-selfhosted-COMMERCIAL.zip
          path: apps/web

      - name: Extract artifact
        working-directory: apps/web
        run: unzip web-${{ env._VERSION }}-selfhosted-COMMERCIAL.zip

      - name: Build Docker image
        working-directory: apps/web
        run: docker build -t bitwarden/web .

      - name: Tag rc branch
        if: github.ref == 'refs/heads/rc'
        run: docker tag bitwarden/web bitwarden/web:rc

      - name: Tag dev
        if: github.ref == 'refs/heads/master'
        run: docker tag bitwarden/web bitwarden/web:dev

      - name: Tag hotfix branch
        if: github.ref == 'refs/heads/hotfix-rc-web'
        run: docker tag bitwarden/web bitwarden/web:hotfix-rc-web

      - name: List Docker images
        if: github.ref == 'refs/heads/master' ||
          github.ref == 'refs/heads/rc' ||
          github.ref == 'refs/heads/hotfix-rc-web'
        run: docker images

      - name: Push rc image
        if: github.ref == 'refs/heads/rc'
        run: docker push bitwarden/web:rc
        env:
          DOCKER_CONTENT_TRUST: 1
          DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ${{ steps.setup-dct.outputs.dct-delegate-repo-passphrase }}

      - name: Push dev image
        if: github.ref == 'refs/heads/master'
        run: docker push bitwarden/web:dev
        env:
          DOCKER_CONTENT_TRUST: 1
          DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ${{ steps.setup-dct.outputs.dct-delegate-repo-passphrase }}

      - name: Push hotfix image
        if: github.ref == 'refs/heads/hotfix-rc-web'
        run: docker push bitwarden/web:hotfix-rc-web
        env:
          DOCKER_CONTENT_TRUST: 1
          DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ${{ steps.setup-dct.outputs.dct-delegate-repo-passphrase }}

      - name: Log out of Docker
        if: github.ref == 'refs/heads/master' ||
          github.ref == 'refs/heads/rc' ||
          github.ref == 'refs/heads/hotfix-rc-web'
        run: |
          docker logout
          echo "DOCKER_CONTENT_TRUST=0" >> $GITHUB_ENV

      - name: Login to Azure - QA Subscription
        uses: Azure/login@ec3c14589bd3e9312b3cc8c41e6860e258df9010  # v1.1
        with:
          creds: ${{ secrets.AZURE_QA_KV_CREDENTIALS }}

      - name: Login to Azure ACR
        run: az acr login -n bitwardenqa

      - name: Tag and Push to Azure QA ACR
        env:
          REGISTRY: bitwardenqa.azurecr.io
        run: |
          if [[ $(grep "pull" <<< "${GITHUB_REF}") ]]; then
            IMAGE_TAG=$(echo "${GITHUB_HEAD_REF}" | sed "s#/#-#g")
          else
            IMAGE_TAG=$(echo "${GITHUB_REF:11}" | sed "s#/#-#g")
          fi

          if [[ "$IMAGE_TAG" == "master" ]]; then
            IMAGE_TAG=dev
          fi

          docker tag bitwarden/web \
            $REGISTRY/web-sh:$IMAGE_TAG

          docker push $REGISTRY/web-sh:$IMAGE_TAG

      - name: Log out of Docker
        run: docker logout

  build-containers:
    name: Build Docker images for bitwardenqa
    runs-on: ubuntu-22.04
    needs:
      - setup
      - build-artifacts
    strategy:
      fail-fast: false
      matrix:
        include:
          - artifact_name: cloud-QA
            image_name: web
          - artifact_name: ee
            image_name: web-ee
    env:
      _VERSION: ${{ needs.setup.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b  # v3.0.2

      - name: Login to Azure
        uses: Azure/login@ec3c14589bd3e9312b3cc8c41e6860e258df9010  # v1.1
        with:
          creds: ${{ secrets.AZURE_QA_KV_CREDENTIALS }}

      - name: Log into container registry
        run: az acr login -n bitwardenqa

      - name: Download ${{ matrix.artifact_name }} artifact
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: web-${{ env._VERSION }}-${{ matrix.artifact_name }}.zip
          path: apps/web

      - name: Extract artifact
        working-directory: apps/web
        run: unzip web-${{ env._VERSION }}-${{ matrix.artifact_name }}.zip

      - name: Build Docker image
        working-directory: apps/web
        run: |
          docker --version
          docker build -t bitwardenqa.azurecr.io/${{ matrix.image_name }} .

      - name: Get image tag
        id: image-tag
        run: |
          if [[ $(grep "pull" <<< "${GITHUB_REF}") ]]; then
            IMAGE_TAG=$(echo "${GITHUB_HEAD_REF}" | sed "s#/#-#g")
          else
            IMAGE_TAG=$(echo "${GITHUB_REF:11}" | sed "s#/#-#g")
          fi

          TAG_EXTENSION=${{ github.event.inputs.custom_tag_extension }}

          if [[ $TAG_EXTENSION ]]; then
            IMAGE_TAG=$IMAGE_TAG-$TAG_EXTENSION
          fi

          echo "::set-output name=value::$IMAGE_TAG"

      - name: Tag image
        env:
          IMAGE_TAG: ${{ steps.image-tag.outputs.value }}
          IMAGE_NAME: ${{ matrix.image_name }}
        run: docker tag bitwardenqa.azurecr.io/$IMAGE_NAME "bitwardenqa.azurecr.io/$IMAGE_NAME:$IMAGE_TAG"

      - name: Tag dev
        if: github.ref == 'refs/heads/master'
        env:
          IMAGE_NAME: ${{ matrix.image_name }}
        run: docker tag bitwardenqa.azurecr.io/$IMAGE_NAME "bitwardenqa.azurecr.io/$IMAGE_NAME:dev"

      - name: Push image
        env:
          IMAGE_TAG: ${{ steps.image-tag.outputs.value }}
          IMAGE_NAME: ${{ matrix.image_name }}
        run: docker push "bitwardenqa.azurecr.io/$IMAGE_NAME:$IMAGE_TAG"

      - name: Push dev images
        if: github.ref == 'refs/heads/master'
        env:
          IMAGE_NAME: ${{ matrix.image_name }}
        run: docker push "bitwardenqa.azurecr.io/$IMAGE_NAME:dev"

      - name: Log out of Docker
        run: docker logout

  crowdin-push:
    name: Crowdin Push
    if: github.ref == 'refs/heads/master'
    needs:
      - build-artifacts
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b  # v3.0.2  # v2.3.4

      - name: Login to Azure
        uses: Azure/login@ec3c14589bd3e9312b3cc8c41e6860e258df9010  # v1.1
        with:
          creds: ${{ secrets.AZURE_PROD_KV_CREDENTIALS }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@c3b3285993151c5af47cefcb3b9134c28ab479af
        with:
          keyvault: "bitwarden-prod-kv"
          secrets: "crowdin-api-token"

      - name: Upload Sources
        uses: crowdin/github-action@ecd7eb0ef6f3cfa16293c79e9cbc4bc5b5fd9c49  # v1.4.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CROWDIN_API_TOKEN: ${{ steps.retrieve-secrets.outputs.crowdin-api-token }}
          CROWDIN_PROJECT_ID: "308189"
        with:
          config: apps/web/crowdin.yml
          crowdin_branch_name: master
          upload_sources: true
          upload_translations: false


  check-failures:
    name: Check for failures
    if: always()
    runs-on: ubuntu-22.04
    needs:
      - cloc
      - setup
      - build-artifacts
      - build-commercial-selfhost-image
      - build-containers
      - crowdin-push
    steps:
      - name: Check if any job failed
        if: ${{ (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/rc') }}
        env:
          CLOC_STATUS: ${{ needs.cloc.result }}
          SETUP_STATUS: ${{ needs.setup.result }}
          ARTIFACT_STATUS: ${{ needs.build-artifacts.result }}
          BUILD_SELFHOST_STATUS: ${{ needs.build-commercial-selfhost-image.result }}
          BUILD_CONTAINERS_STATUS: ${{ needs.build-containers.result }}
          CROWDIN_PUSH_STATUS: ${{ needs.crowdin-push.result }}
        run: |
          if [ "$CLOC_STATUS" = "failure" ]; then
              exit 1
          elif [ "$SETUP_STATUS" = "failure" ]; then
              exit 1
          elif [ "$ARTIFACT_STATUS" = "failure" ]; then
              exit 1
          elif [ "$BUILD_SELFHOST_STATUS" = "failure" ]; then
              exit 1
          elif [ "$BUILD_CONTAINERS_STATUS" = "failure" ]; then
              exit 1
          elif [ "$CROWDIN_PUSH_STATUS" = "failure" ]; then
              exit 1
          fi

      - name: Login to Azure - Prod Subscription
        uses: Azure/login@ec3c14589bd3e9312b3cc8c41e6860e258df9010  # v1.1
        if: failure()
        with:
          creds: ${{ secrets.AZURE_PROD_KV_CREDENTIALS }}

      - name: Retrieve secrets
        id: retrieve-secrets
        if: failure()
        uses: bitwarden/gh-actions/get-keyvault-secrets@c3b3285993151c5af47cefcb3b9134c28ab479af
        with:
          keyvault: "bitwarden-prod-kv"
          secrets: "devops-alerts-slack-webhook-url"

      - name: Notify Slack on failure
        uses: act10ns/slack@da3191ebe2e67f49b46880b4633f5591a96d1d33  # v1.5.1
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ steps.retrieve-secrets.outputs.devops-alerts-slack-webhook-url }}
        with:
          status: ${{ job.status }}
